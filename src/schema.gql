# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccountToViewDto {
  id: String!
  name: String!
  email: String!
  cpf: String!
  role: RoleEnum!
}

enum RoleEnum {
  ADMIN
  USER
}

type SignInResultDto {
  token: String!
  account: AccountToViewDto!
}

type LocationToViewDto {
  id: String!
  city: String!
  state: String!
  street: String!
  neighborhood: String!
  cep: String!
  number: String!
}

type ComplaintSolverToViewDto {
  id: String!
  name: String!
}

type ComplaintToViewDto {
  id: String!
  status: StatusesEnum!
  location: LocationToViewDto!
  solver: ComplaintSolverToViewDto
  denunciatorId: String!
  description: String!
  solverDescription: String
  createdAt: DateTime!
  updatedAt: DateTime
}

enum StatusesEnum {
  WAITING
  DOING
  SOLVED
  REJECTED
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type ComplaintItemToViewDto {
  id: String!
  status: StatusesEnum!
  description: String!
  denunciatorId: String!
  solverDescription: String
  formattedAddress: String!
  location: LocationToViewDto!
  createdAt: DateTime!
}

type PaginatedComplaintsToViewDto {
  items: [ComplaintItemToViewDto!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type Query {
  findAllComplaints(input: FindAllComplaintsInputDto!): PaginatedComplaintsToViewDto!
  findComplaint(input: FindComplaintInputDto!): ComplaintToViewDto!
}

input FindAllComplaintsInputDto {
  limit: Int!
  offset: Int!
  denunciatorId: String
}

input FindComplaintInputDto {
  id: String!
}

type Mutation {
  updateAccount(input: UpdateAccountInputDto!): AccountToViewDto!
  deleteAccount(input: DeleteAccountInputDto!): AccountToViewDto!
  createAccount(input: CreateAccountInputDto!): AccountToViewDto!
  signIn(input: SignInInputDto!): SignInResultDto!
  createComplaint(input: CreateComplaintInputDto!): ComplaintToViewDto!
  updateComplaint(input: UpdateComplaintInputDto!): ComplaintToViewDto!
}

input UpdateAccountInputDto {
  id: String!
  name: String!
  email: String!
  password: String!
  cpf: String!
  role: RoleEnum!
}

input DeleteAccountInputDto {
  id: String!
}

input CreateAccountInputDto {
  name: String!
  email: String!
  password: String!
  cpf: String!
  role: RoleEnum
}

input SignInInputDto {
  email: String!
  password: String!
}

input CreateComplaintInputDto {
  location: LocationInputDto!
  denunciatorId: String!
  description: String!
  solverId: String
  status: StatusesEnum
}

input LocationInputDto {
  id: String
  city: String!
  state: String!
  street: String!
  neighborhood: String!
  cep: String!
  number: String!
}

input UpdateComplaintInputDto {
  id: String!
  location: LocationInputDto!
  description: String
  solverId: String
  solverDescription: String
  status: StatusesEnum!
  updatedAt: DateTime!
}